{"version":3,"sources":["scripts/loadgeneral.js"],"names":["createNode","element","document","createElement","append","parent","el","appendChild","fetchContent","url","fetch","response","json","data","translate","language","words","s","split","map","word","n","toLowerCase","search","ans","substr","substring","join","replace","getLanguageSelect","languageSelector","getElementById","selectedLanguage","selectedIndex","value","loadTitle","siteMap","translatedText","hero","title","innerHTML","loadNavigation","mainNavigationElement","mainNavigation","navText","toString","reloadSiteMapLanguage","then","translatedInspirationTitle","inspiration","translatedInspirationSubhead","subheading","translateDidYouKnow","description","translatedGalleryTitle","gallerypanel","translatedEpisodesTitle","episodespanel","catch","e","console","log"],"mappings":"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","file":"loadgeneral.13d614cf.js","sourceRoot":"..","sourcesContent":["function createNode(element) {\r\n  return document.createElement(element);\r\n}\r\n\r\nfunction append(parent, el) {\r\n  return parent.appendChild(el);\r\n}\r\n\r\nasync function fetchContent(url) {\r\n  let response = await fetch(url);\r\n  let data = await response.json();\r\n  return data;\r\n}\r\n\r\n/*\r\n  A pig latin translator taken pretty directly from:\r\n   https://github.com/jombastic/pig-latin/tree/master/js\r\n*/\r\nfunction translate(language, words) {\r\n  if (language == 'en_US') {\r\n    return words; // assumes english is being passed in //return english data set\r\n  } else if (language != 'la_PG') {\r\n    throw \"Translation error: Asked to translate an unimplemented language =\" + language + \"=\";\r\n  } else { // Translate into pig latin\r\n    let result = words.split(/\\s|\\b/)\r\n      .map(function(word) { //split on anything that has spaces or special characters\r\n        word = word.toLowerCase();\r\n        let n = word.search(/[aeiuo]/); //return the poistion of the first vowel\r\n        let ans = \"\";\r\n        if (n === 0) { //for words that start with a vowel\r\n          ans = word + \"yay\";\r\n        } else if (n === -1) { //does not have a vowel\r\n          ans = word;\r\n        } else { //for words that do not start with a vowel and does not have a vowel.\r\n          ans = word.substr(n) + word.substr(0, 1) + word.substring(1, n) + \"ay\";\r\n        }\r\n        //    console.log(\"ans=\"+ans);\r\n        return ans;\r\n      });\r\n    // should replace punctuation with a regexp that squeezes out the spaces but this takes care of most of the\r\n    // ugly ones displayed\r\n    let s = result.join(\" \").replace(\" ,\", \",\")\r\n     .replace(\" .\", \".\").replace(\". \", \".\");\r\n    return s;\r\n  }\r\n}\r\n\r\nfunction getLanguageSelect() {\r\n  let languageSelector = document.getElementById('language_select');\r\n  let selectedIndex = languageSelector.selectedIndex;\r\n  let selectedLanguage = languageSelector[selectedIndex].value;\r\n  return selectedLanguage;\r\n}\r\n\r\nasync function loadTitle(language, siteMap) {\r\n  const translatedText = translate(language, siteMap.hero.title);\r\n  const titleEl = document.getElementById('heroTitle');\r\n  titleEl.innerHTML = translatedText;\r\n}\r\n\r\nasync function loadNavigation(language, siteMap) {\r\n  const mainNavigationElement = document.getElementById('mainNavigation');\r\n  mainNavigationElement.innerHTML = \"\";\r\n  // console.log(\"mainNavigationElement\" + mainNavigationElement);\r\n  // console.log(\"mainNavigationElement\" + JSON.stringify(mainNavigationElement));\r\n  siteMap.hero.mainNavigation.map(\r\n    function (navText) {\r\n      mainNavigationElement.innerHTML += `\r\n               <li id=\"#${navText.toString()}\">\r\n               \t<a href=\"#${navText.toString().toLowerCase()}-panel\">\r\n${translate(language, navText.toString())}\r\n</a>\r\n               </li>`;\r\n    }\r\n  );\r\n  // console.log(\"mainNavigationElement2\" + JSON.stringify(mainNavigationElement));\r\n\r\n}\r\n\r\nasync function reloadSiteMapLanguage() {\r\n  let url = \"http://localhost:3000/data/sitemap.json\";\r\n  await fetchContent(url).then(response => {\r\n    const language = getLanguageSelect();\r\n    loadTitle(language, response);\r\n    loadNavigation(language, response);\r\n// TODO: REFACTOR INTO FUNCTIONS\r\n\t// INSPIRATION\r\n\tconst translatedInspirationTitle = translate(language, response.inspiration.title);\r\n\t\t\tconst inspirationTitle = document.getElementById('inspirationHeader');\r\n\t\t\t\tinspirationTitle.innerHTML = translatedInspirationTitle ;\r\n\r\n\tconst translatedInspirationSubhead = translate(language, response.inspiration.subheading);\r\n\t\t\tconst inspirationSubhead = document.getElementById('translateSubhead');\r\n\t\t\t\tinspirationSubhead.innerHTML = translatedInspirationSubhead;\r\n\r\n\tconst translateDidYouKnow = translate(language, response.inspiration.description);\r\n\t\tconst inspirationDidYouKnow = document.getElementById('movieFacts');\r\n\t\t\t\tinspirationDidYouKnow.innerHTML = translateDidYouKnow;\r\n\t// GALLERY\r\n\tconst translatedGalleryTitle = translate(language, response.gallerypanel.title);\r\n\t\tconst galleryTitle = document.getElementById(\"galleryHeader\");\r\n\t\t\t\tgalleryTitle.innerHTML = translatedGalleryTitle;\r\n\t// EPISODES\r\n\tconst translatedEpisodesTitle = translate(language, response.episodespanel.title);\r\n\t\tconst episodesTitle = document.getElementById(\"episodesHeader\");\r\n\t\t\tepisodesTitle.innerHTML = translatedEpisodesTitle;\r\n\r\n  });\r\n}\r\n\r\n(async function() {\r\n  await reloadSiteMapLanguage();\r\n\r\n})().catch(e => {console.log(e)});\r\n\r\n\r\n"]}